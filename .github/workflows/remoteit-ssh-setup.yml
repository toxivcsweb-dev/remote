name: Reverse SSH Tunnel with root access + optional remote.it

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *'  # Every 6 hours

jobs:
  reverse-ssh:
    runs-on: ubuntu-latest
    timeout-minutes: 360

    env:
      ROOT_PASS: "Root@12345"
      REMOTEIT_EMAIL: "toxicvpsweb@gmail.com"
      REMOTEIT_PASSWORD: "eT83FjV4cWaKD!5"

    steps:
      - name: Install SSH & autossh
        run: |
          sudo apt-get update -y
          sudo apt-get install -y openssh-server autossh curl file
          sudo mkdir -p /var/run/sshd

      - name: Configure SSH (root + password login)
        run: |
          echo "root:${ROOT_PASS}" | sudo chpasswd
          sudo sed -i 's/^#PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^PermitRootLogin .*/PermitRootLogin yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^#PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo sed -i 's/^PasswordAuthentication .*/PasswordAuthentication yes/' /etc/ssh/sshd_config
          sudo systemctl restart ssh || sudo service ssh restart
          echo "✅ SSH ready: root / ${ROOT_PASS}"

      - name: Create SSH key for reverse tunnel
        run: |
          mkdir -p ~/.ssh
          ssh-keygen -t rsa -b 2048 -f ~/.ssh/id_rsa_revssh -q -N ""
          chmod 600 ~/.ssh/id_rsa_revssh

      - name: Start reverse SSH tunnel using autossh
        run: |
          nohup autossh -M 0 -N -o "ServerAliveInterval=30" -o "ServerAliveCountMax=3" \
            -o "StrictHostKeyChecking=no" \
            -i ~/.ssh/id_rsa_revssh -R 0:localhost:22 ssh.localhost.run > revssh.log 2>&1 &
          sleep 8

      - name: Parse reverse tunnel info
        run: |
          LOG=revssh.log
          HOSTPORT=$(grep -Eo '([0-9a-zA-Z.-]+:[0-9]{3,6})' "$LOG" | grep 'localhost.run' | head -n1 || true)
          if [ -n "$HOSTPORT" ]; then
            HOST=$(echo "$HOSTPORT" | cut -d: -f1)
            PORT=$(echo "$HOSTPORT" | cut -d: -f2)
            echo "✅ SSH tunnel established"
            echo "Host: $HOST"
            echo "Port: $PORT"
            echo "User: root"
            echo "Password: ${ROOT_PASS}"
            echo "SSH command: ssh root@${HOST} -p ${PORT}"
          else
            echo "❌ Could not parse tunnel host/port"
            head -n 50 revssh.log || true
            exit 1
          fi

# Optional: if remote.it CLI starts working again, you can uncomment this block
#      - name: Login to remote.it CLI (optional fallback)
#        run: |
#          curl -fsSL https://raw.githubusercontent.com/remoteit/install/master/install.sh -o install.sh
#          chmod +x install.sh
#          sudo ./install.sh --install-only
#          if command -v remoteit >/dev/null; then
#            remoteit login -e "$REMOTEIT_EMAIL" -p "$REMOTEIT_PASSWORD"
#          else
#            echo "remoteit CLI not available"
#          fi

      - name: Keep alive until timeout
        run: |
          echo "💡 Runner will stay alive up to 6 hours unless cancelled."
          sleep 3
